@usecase
<p>Os <a href="https://en.wikipedia.org/wiki/Black-box_testing" target="_blank" rel="noopener">testes blackbox</a>&nbsp;permitem fazer&nbsp;fazer&nbsp;a cobertura&nbsp;da&nbsp;aplica&ccedil;&atilde;o&nbsp;sem&nbsp;ter em considera&ccedil;&atilde;o&nbsp;a sua implementa&ccedil;&atilde;o. Esta&nbsp;abordagem&nbsp;&eacute;&nbsp;orientada aos dados, na&nbsp;medida&nbsp;em que&nbsp;o&nbsp;seu sucesso&nbsp;depende da sele&ccedil;&atilde;o correta dos valores de input passados&nbsp;&agrave;s&nbsp;interfaces da&nbsp;aplica&ccedil;&atilde;o.<br /><br />O <a href="https://www.guru99.com/equivalence-partitioning-boundary-value-analysis.html" target="_blank" rel="noopener">particionamento de equival&ecirc;ncia</a>&nbsp;&eacute;&nbsp;uma&nbsp;das&nbsp;t&eacute;cnicas&nbsp;black-box mais&nbsp;populares. Esta&nbsp;t&eacute;cnica&nbsp;separa&nbsp;a&nbsp;gama&nbsp;de valores&nbsp;admiss&iacute;veis&nbsp;de um par&acirc;metro de entrada&nbsp; (ou&nbsp;resultado&nbsp;de um m&eacute;todo) da&nbsp;gama&nbsp;de&nbsp;valores&nbsp;n&atilde;o admiss&iacute;veis, obrigando posteriormente a criar um teste&nbsp;para&nbsp;ambas&nbsp;as gamas.</p> <p>O particionamento de equival&ecirc;ncia&nbsp;n&atilde;o&nbsp;define os&nbsp;valores&nbsp;a selecionar dentro das&nbsp;parti&ccedil;&otilde;es. A <strong>an&aacute;lise dos valores&nbsp;limite</strong>&nbsp; &eacute;&nbsp;uma&nbsp;abordagem&nbsp;para&nbsp;a&nbsp;sele&ccedil;&atilde;o&nbsp;de valores dentro de cada&nbsp;parti&ccedil;&atilde;o. Nesta&nbsp;abordagem, s&atilde;o&nbsp;selecionados&nbsp;os&nbsp;valores&nbsp;pertencentes aos&nbsp;limites&nbsp;dos intervalos&nbsp;inferiores&nbsp;e superiores das&nbsp;parti&ccedil;&otilde;es de equival&ecirc;ncia&nbsp;de cada&nbsp;par&acirc;metro&nbsp;ou&nbsp;valor de retorno de cada&nbsp;m&eacute;todo.</p> <h1>Exerc&iacute;cio</h1> <h2>Particionamento de Equival&ecirc;ncia</h2> <p><input type="checkbox" />Crie&nbsp;a classe&nbsp;<strong>Die</strong> a partir&nbsp;da&nbsp;sua&nbsp;<a href="files/TestBlackBoxPartitioning/doc/index.html" target="_blank" rel="noopener">especifica&ccedil;&atilde;o;</a></p> <p><input type="checkbox" />Crie&nbsp;os&nbsp;testes para&nbsp;a&nbsp;classe&nbsp;<strong>Die</strong>, tendo em conta&nbsp;os&nbsp;princ&iacute;pios e&nbsp;heur&iacute;sticas do particionamento de equival&ecirc;ncia. &Eacute; importante considerar aqui que o comportamento de um m&eacute;todo&nbsp;pode&nbsp;depender&nbsp;n&atilde;o&nbsp;s&oacute; dos valores&nbsp;dos par&acirc;metros de entrada, como&nbsp;tamb&eacute;m de dados&nbsp;obtidos&nbsp;atrav&eacute;s de outras&nbsp;fontes&nbsp;(ex: gerador de n&uacute;meros aleat&oacute;rios). Nesses cen&aacute;rios, quando&nbsp;n&atilde;o&nbsp;for poss&iacute;vel&nbsp;prever&nbsp;ou&nbsp;controlar&nbsp;os&nbsp;dados&nbsp;obtidos a partir&nbsp;dessas&nbsp;fontes, torna-se necess&aacute;rio&nbsp;validar&nbsp;probabilisticamente&nbsp;o&nbsp;m&eacute;todo&nbsp;que&nbsp;est&aacute; a ser&nbsp;testado, repetindo a sua&nbsp;invoca&ccedil;&atilde;o&nbsp;v&aacute;rias&nbsp;vezes;</p> <p><input type="checkbox" />Importe&nbsp;o&nbsp;<a href="files/TestBlackBoxPartitioning/resources/ArrayUtils.jar">c&oacute;digo da&nbsp;classe&nbsp;<strong>ArrayUtils</strong></a>;</p> <p><input type="checkbox" />Crie&nbsp;os&nbsp;testes para&nbsp;os&nbsp;m&eacute;todos&nbsp;<strong>findMin(..)</strong> e <strong>goodResize(..)</strong>;</p> <p><input type="checkbox" />Verifique&nbsp;se&nbsp;os&nbsp;testes criados para&nbsp;o&nbsp;m&eacute;todo <strong>goodResize(..)</strong> passam&nbsp;quando&nbsp;aplicados&nbsp;ao&nbsp;m&eacute;todo&nbsp;<strong>badResize(..)</strong>.</p> <h2>Particionamento de Equival&ecirc;ncia + An&aacute;lise dos Valores&nbsp;Limite</h2> <p><input type="checkbox" />Altere o&nbsp;m&eacute;todo&nbsp;<strong>findAndPrintPairs(..)</strong>, de forma a que&nbsp;o&nbsp;par&acirc;metro&nbsp;<strong>target</strong> aceite apenas&nbsp;<strong>valores&nbsp;positivos&nbsp;&gt; 0</strong>;</p> <p><input type="checkbox" />Crie&nbsp;os&nbsp;testes para&nbsp;os&nbsp;m&eacute;todos <strong>findAndPrintPairs(..) </strong>e<strong>&nbsp;showList(..)</strong>, considerando&nbsp;como&nbsp;crit&eacute;rio de sele&ccedil;&atilde;o de valores&nbsp;os&nbsp;resultados&nbsp;da&nbsp;an&aacute;lise&nbsp;dos valores&nbsp;limite. &nbsp;Para&nbsp;analisar&nbsp;os&nbsp;valores&nbsp;escritos&nbsp;&eacute;&nbsp;necess&aacute;rio&nbsp;redirecionar o&nbsp;output da&nbsp;consola&nbsp;antes de realizar os&nbsp;testes e&nbsp;rep&ocirc;r&nbsp;a configura&ccedil;&atilde;o inicial depois de executar os&nbsp;testes, utilizando &nbsp;como&nbsp;refer&ecirc;ncia o exemplo&nbsp;seguinte.</p> <pre><code>private final static ByteArrayOutputStream outContent = new ByteArrayOutputStream();<br /><br />@BeforeAll<br />public void setUpStreams() { System.setOut(new PrintStream(outContent)); }<br /><br />@Test<br />void testFoo(){<br /> assertTrue(outContent.toString().equals("Success!!!"));<br />//or<br /> assertTrue(outContent.toString().contains("Success!!!"));<br />// in case reset is needed<br /> outContent.reset();<br />}<br /> @AfterAll<br />public void restoreStreams() { System.setOut(System.out); }</code></pre> <p><input type="checkbox" />Crie&nbsp;os&nbsp;testes para&nbsp;os&nbsp;m&eacute;todos &nbsp;<strong>bubblesort(..)</strong> e&nbsp;<strong>isAscending(..)</strong>. Um destes m&eacute;todos&nbsp;pode&nbsp;ter&nbsp;erros!</p>
@methods
<dfn>TestBlackBoxPartitioning</dfn> - classe de testes
@deadline
2018-04-05 20:10
@group
esII20172018
@exectype
AspectJProject