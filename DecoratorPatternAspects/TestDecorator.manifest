@usecase
<h1>Testes White-box: Cobertura de Decisões</h1><p>A <a href="https://www.tutorialspoint.com/software_testing_dictionary/decision_coverage_testing.htm" target="_blank" rel="noopener">cobertura de decisões</a> é uma das <strong>técnicas de teste white-box</strong> mais populares. Esta técnica garante que cada decisão associada a uma <strong>estrutura condicional</strong> (ex: <em>if</em>, <em>switch</em>, <em>while</em>, <em>for</em>)&nbsp;é coberta por pelo menos um teste, para todo o espaço de resultados (<em>verdadeiro</em>/<em>falso</em>).</p><p>Se criarmos um <strong>cenário de teste</strong> com o valor <strong>a=2</strong> para o método do exemplo seguinte, conseguimos uma <strong>taxa de cobertura de 50%</strong>. Para um outro cenário onde o <strong>a=6</strong>, a taxa de cobertura é igual. <strong>Combinando ambos os cenários</strong>, conseguimos atingir <strong>100% de cobertura</strong>.</p><pre>void demo(int a) { <br />   If(a&gt; 5)<br />      a=a*3<br />   System.out.println(a);<br />}</pre><h3>Exercício</h3><p>Considere a <a href="files/TestDecorator/resources/DecoratorPattern.jar">implementação do padrão Decorator</a>.<br /><br />- Crie os testes para validar a condição do <dfn>if</dfn> do método <dfn>auth</dfn> da classe <dfn>Auth</dfn>.</p><pre><code>public void auth(String username, String password) throws AuthException {<br />   if(! username.equals("admin") || !password.equals("admin"))<br />      throw new AuthException();<br />}<br /></code></pre><p>- Crie os testes para validar a condição do <dfn>if</dfn> do método <dfn>auth</dfn> da classe <dfn>CommonWordsValidator</dfn>.</p><pre><code>public void auth(String username, String password) throws AuthException, IOException {<br />   String dicWord = getHTTPRequest(password);<br />   if(dicWord.length()&lt;10) throw new AuthException();<br />   else super.auth(username, password);<br />}<br /></code></pre><p>Algumas questões para <strong>refletir</strong>:</p><p>- Todos os ramos de execução foram testados exaustivamente?</p><p>- De que forma as falhas na cobertura das decisões podem estar relacionadas com as limitações da aplicação desta técnica em testes white-box?</p><p><strong>Submeta</strong> os testes para <strong>validação</strong>.</p>
@methods
<a target='_blank' href='files/TestDecorator/doc/index.html'>JavaDocs</a>
@deadline
2019-03-24 23:55
@group
es2201819
@exectype
AspectJProject